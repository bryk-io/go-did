name: ci
# default job permissions
permissions:
  contents: read
env:
  # used to hold the commit message
  commit_msg: ""
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  workflow_dispatch: {}
#    Inputs are available under: github.event.inputs.{name}
#    inputs:
#      name:
#        description: 'Variable description'
#        required: true
#        default: 'default value here'
# https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch
jobs:
  # Scan direct Go dependencies for known vulnerabilities
  scan:
    name: scan for vulnerabilities
    runs-on: ubuntu-latest
    steps:
      # Harden workflow runner
      - name: Harden workflow runner (audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      # Configure runner environment
      - name: Set up runner environment
        run: ./.github/workflows/assets/utils.sh setup
        env:
          GITHUB_USER: ${{ github.actor }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # Go
      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: 1.25.x

      # Get commit message
      - name: Get commit message
        run: |
          echo 'commit_msg<<EOF' >> $GITHUB_ENV
          git log --format=%B -n 1 ${{ github.sha }} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      # Scan dependencies using `govuln`
      # Can be excluded if the commit message contains: [skip scan-deps]
      # https://github.com/golang/vuln
      - name: Scan dependencies
        if: ${{ !contains(env.commit_msg, '[skip scan-deps]') }}
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@v1.1.4
          govulncheck -format sarif .

      # Scan for leaked secrets
      # Can be excluded if the commit message contains: [skip scan-secrets]
      # https://github.com/marketplace/actions/trufflehog-oss
      - name: Scan for leaked secrets
        uses: trufflesecurity/trufflehog@18c7b1fc33e6c16b27ea66ff27cc7e642fb7cd0a # v3.90.6
        if: ${{ !contains(env.commit_msg, '[skip scan-secrets]') }}
        with:
          base: "" # scan entire branch
          head: ${{ github.ref_name }}
          extra_args: --debug --only-verified

  # Runs on every push and pull request on the selected branches.
  # Can also be executed manually.
  test:
    name: code quality and correctness
    needs: scan
    strategy:
      matrix:
        go-version: [1.24.x, 1.25.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    steps:
      # Harden workflow runner
      - name: Harden workflow runner (audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      # Configure runner environment
      - name: Set up runner environment
        run: ./.github/workflows/assets/utils.sh setup
        env:
          GITHUB_USER: ${{ github.actor }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # Go
      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ matrix.go-version }}

      # Style consistency and static analysis using 'golangci-lint'
      # https://github.com/golangci/golangci-lint-action
      - name: Static analysis
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: v2.4

      # Run unit tests
      - name: Test
        run: make test

      # Save artifacts
      - name: Save artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: assets-${{ matrix.go-version }}
          path: |
            coverage.html
